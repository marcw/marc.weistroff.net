<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: self-hosting | Another brain on earth]]></title>
  <link href="http://marc.weistroff.net/blog/categories/self-hosting/atom.xml" rel="self"/>
  <link href="http://marc.weistroff.net/"/>
  <updated>2014-08-23T12:18:58+02:00</updated>
  <id>http://marc.weistroff.net/</id>
  <author>
    <name><![CDATA[Marc Weistroff]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Why I Stopped self-hosting my mails, IM and website]]></title>
    <link href="http://marc.weistroff.net/2012/12/15/why-i-stopped-self-hosting-my-stuffs/"/>
    <updated>2012-12-15T00:00:00+01:00</updated>
    <id>http://marc.weistroff.net/2012/12/15/why-i-stopped-self-hosting-my-stuffs</id>
    <content type="html"><![CDATA[<p>A year ago, I started an experiment. I wanted to quit gmail and gtalk services
and prove me that I could host my emails and my IM myself.  It went quite well
but I decided to stop and subscribed to <a href="http://fastmail.fm">fastmail.fm</a> and
to <a href="http://hosted.im">hosted.im</a>.</p>

<h2>Installation</h2>

<p>A year ago, I spent some days installing a fully functionnal mail/web/jabber
server. Hopefully, I had some <a href="http://flurdy.com/docs/postfix/">good tutorials</a>
about setting up a mail server. On the jabber side, it was quite easy even if
sometime, my WTF-o-meter level was really high. I blame my totally absent
knowledge of erlang and mnesia here.</p>

<p>The easiest part was to set-up varnish and nginx on the server.  This is
because I use these technologies every day. I still think that serving static
files with a reverse proxy could be much more easier and quicker to setup.</p>

<p>Backuping is easy and cheap, thanks to Amazon S3. I did not suffer any crash
and did not have to restore my data. I think I would have cried if I had to do
that because of the time needed to set-up the server again.  The pain would
have been bearable thanks to the EBS (if it doesn&rsquo;t fail).</p>

<p>My final set-up used these technologies: Amazon EC2, Amazon S3, Amazon
CloudFront, Amazon Elastic Block Storage, Postfix, Dovecot, Sieve, Varnish,
Postgrey, Spamassassin, Nginx and Ejabberd.</p>

<h2>Running it</h2>

<p>Here is what I learned:</p>

<ul>
<li><p>SMTP servers obey Murphy&rsquo;s Law. If you have an important mail to send, it
will fail. Fallbacking to gmail happened too many time.</p></li>
<li><p>ejabberd is stable. In a year of operation, it failed once and restarting
it made did the trick. The <a href="http://www.process-one.net/en/">guys behind
ejabberd</a> did a really great job.</p></li>
<li><p>Spam was virtually absent from my mail. Spamassasin and postgrey worked
well.</p></li>
<li><p><a href="http://en.wikipedia.org/wiki/Sieve_%28mail_filtering_language%29">Sieve</a>
is great. I mean really really GREAT. Filtering mail in gmail is a pain.</p></li>
<li><p>Mail clients all suck. Sparrow was an exception.</p></li>
<li><p>I&rsquo;m not nerdy enough to use <a href="http://www.mutt.org/">Mutt</a>.</p></li>
<li><p>I should have used a configuration management system like Chef, Puppet or
CFEngine to create the server. It would have doubled/tripled the time
required to configure it properly, but it would have been an asset if I
wanted to migrate my services to another host, which I considered at some
point.</p></li>
</ul>


<h2>Now</h2>

<p>Yesterday, and after too many problem with my SMTP server, I decided to end
this experiment and started looking for a reliable mail provider. I chose
fastmail.fm because of the price, migrations processes and the Sieve support.</p>

<p>This website is now hosted by Amazon S3. The only cron job that I had is now
run on heroku. My jabber service is being migrated to hosted.im.</p>

<p>This will costs me around 50$ a year and this is definitely worth the time I
won&rsquo;t put in managing a server.</p>

<p>Creating, installing and configuring software is easy. Achieving reliability is
hard.</p>
]]></content>
  </entry>
  
</feed>
